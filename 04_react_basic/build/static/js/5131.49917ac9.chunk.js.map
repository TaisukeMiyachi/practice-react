{"version":3,"file":"static/js/5131.49917ac9.chunk.js","mappings":"0LAYA,UATgB,WACd,OACEA,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,QAAK,KACND,EAAAA,EAAAA,KAACE,EAAAA,QAAU,MAGjB,C,mDCAA,UARgB,WACd,OACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWJ,UACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAGV,C,mDCuBA,UA1BmB,WAEjB,IAEeK,EAFTC,EAAQ,aAGRC,GAAMN,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAIhB,OAFAQ,QAAQC,IAAIF,IAIVR,EAAAA,EAAAA,MAAA,OAAKK,UAAWE,EAAMI,cAAcV,SAAA,EAElCC,EAAAA,EAAAA,KAAA,MAAAD,SAAK,SAAWM,KAEhBL,EAAAA,EAAAA,KAAA,MAAAD,SAZS,CAAC,QAAS,QAAS,YAc5BC,EAAAA,EAAAA,KAAA,MAAAD,UAbWK,EAaA,QAbG,GAAAM,OAAQN,EAAG,iBAexBJ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAEJO,IAGP,C,8BC5BA,WAAiB,C,8BCAjB,WAAiB,C","sources":["080_expr_in_jsx/end/Example.js","080_expr_in_jsx/end/components/Child.js","080_expr_in_jsx/end/components/Expression.js","webpack://react-app-template/./src/080_expr_in_jsx/end/components/Child.css?28d2","webpack://react-app-template/./src/080_expr_in_jsx/end/components/Expression.css?7d20"],"sourcesContent":["import Child from \"./components/Child\";\nimport Expression from \"./components/Expression\";\n\nconst Example = () => {\n  return (\n    <div>\n      <Child />\n      <Expression />\n    </div>\n  );\n};\n\nexport default Example;\n","import \"./Child.css\";\n\nconst Example = () => {\n  return (\n    <div className=\"component\">\n      <h3>Hello Component</h3>\n    </div>\n  );\n};\n\nexport default Example;\n","/* POINT JSX には JavaScript 式を記述できる\nJSX 内の 波括弧 {...} で囲んだ部分は JavaScript 式として実行時に評価されます。\n */\nimport \"./Expression.css\";\n\nconst Expression = () => {\n  \n  const title = \"Expression\";\n  const arry = [\"item1\", \"item2\", \"item3\"];\n  const hello = (arg) => `${arg} Function`;\n  const jsx = <h3>Hello JSX</h3>;\n  \n  console.log(jsx);\n\n  return (\n    // POINT {...} は属性値にも使用できます。\n    <div className={title.toLowerCase()}>\n      {/* POINT 波括弧内は実行時に評価されます。 */}\n      <h3>{\"Hello \" + title}</h3>\n      {/* POINT 配列を子要素に指定すると配列の要素が値の列として展開されます。 */}\n      <h3>{arry}</h3>\n      {/* POINT 関数を呼び出して return した値を埋め込むこともできます。 */}\n      <h3>{hello(\"Hello\")}</h3>\n      {/* POINT 波括弧内に JSX を記述することもできます。*/}\n      {<h3>Hello JSX</h3>}\n      {/* POINT 変数に代入したJSXも埋め込めます。 */}\n      {jsx}\n    </div>\n  );\n};\n\nexport default Expression;\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["_jsxs","children","_jsx","Child","Expression","className","arg","title","jsx","console","log","toLowerCase","concat"],"sourceRoot":""}