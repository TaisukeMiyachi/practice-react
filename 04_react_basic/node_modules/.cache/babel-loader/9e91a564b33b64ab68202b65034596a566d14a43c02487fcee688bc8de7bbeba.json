{"ast":null,"code":"/* POINT Props の受け取り方\n親コンポーネントで属性値のように記述した各値は、１つのオブジェクトとして子コンポーネントで受け取ることができる。\n */import\"./Child.css\";/* POINT Propsを分割代入で受け取る！ */ /* POINT Propsのデフォルト値を設定する！ */import{jsx as _jsx}from\"react/jsx-runtime\";var Child=function Child(_ref){var _ref$color=_ref.color,c=_ref$color===void 0?'green':_ref$color,num=_ref.num,fn=_ref.fn,bool=_ref.bool,obj=_ref.obj;// console.log(bool);\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"component \".concat(c),children:/*#__PURE__*/_jsx(\"h3\",{children:\"Hello Component\"})});};export default Child;","map":{"version":3,"names":["jsx","_jsx","Child","_ref","_ref$color","color","c","num","fn","bool","obj","className","concat","children"],"sources":["/Users/miyachitaisuke/react-guide-material/04_react_basic/src/090_props/end/components/Child.js"],"sourcesContent":["/* POINT Props の受け取り方\n親コンポーネントで属性値のように記述した各値は、１つのオブジェクトとして子コンポーネントで受け取ることができる。\n */\n\n\nimport \"./Child.css\";\n\n/* POINT Propsを分割代入で受け取る！ */\n/* POINT Propsのデフォルト値を設定する！ */\nconst Child = ({ color: c = 'green', num, fn, bool, obj }) => {\n\n  // console.log(bool);\n\n  return (\n    <div className={`component ${c}`}>\n      <h3>Hello Component</h3>\n      {/* <h3>{num}</h3>\n      <h3>{fn('Props')}</h3>\n      <h3>{ bool ? 'true' : 'false'}</h3>\n      <h3>{ obj.name + obj.age }</h3> */}\n    </div>\n  );\n};\n\nexport default Child;\n"],"mappings":"AAAA;AACA;AACA,GAGA,MAAO,aAAa,CAEpB,6BACA,qCAAAA,GAAA,IAAAC,IAAA,yBACA,GAAM,CAAAC,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAAC,IAAA,CAAmD,KAAAC,UAAA,CAAAD,IAAA,CAA7CE,KAAK,CAAEC,CAAC,CAAAF,UAAA,UAAG,OAAO,CAAAA,UAAA,CAAEG,GAAG,CAAAJ,IAAA,CAAHI,GAAG,CAAEC,EAAE,CAAAL,IAAA,CAAFK,EAAE,CAAEC,IAAI,CAAAN,IAAA,CAAJM,IAAI,CAAEC,GAAG,CAAAP,IAAA,CAAHO,GAAG,CAErD;AAEA,mBACET,IAAA,QAAKU,SAAS,cAAAC,MAAA,CAAeN,CAAC,CAAG,CAAAO,QAAA,cAC/BZ,IAAA,OAAAY,QAAA,CAAI,iBAAe,CAAI,CAAC,CAKrB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}